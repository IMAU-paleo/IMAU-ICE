# Depends on this file
$(OBJ_PATH)/%.o : %.f90 Makefile_include_book.txt

# Compiler names:
  F90 = mpifort

# Setting NetCDF, NetCDF-Fortran, and PETSc library info:
  NCINC     = $(shell nc-config --cflags)
  NCLIB     = $(shell nc-config --libs)
  NFINC     = $(shell nf-config --fflags)
  NFLIB     = $(shell nf-config --flibs)
  PETSCINC  = $(shell pkg-config petsc --cflags )
  PETSCLIB  = $(shell pkg-config petsc --libs )

# Compile with SELEN: anything else than yes (no quotes) will skip all
# SELEN-related stuff both in the Makefile and in the model code
  DO_SELEN = no

  ifeq ($(DO_SELEN),yes)
    COMPILER_FLAGS_SELEN = -DDO_SELEN
  endif

# Basic flags:
  COMPILER_FLAGS_BASIC    = -O3 -Wall -ffree-line-length-none -cpp \
                            -fimplicit-none -g -march=native \
                            -J${MOD_PATH}

# Check flags:
# check=all : bounds checking etc ...
# backtrace : print backtrace on checking fail
# Og        : compile only with optimizations compatible with gdb enabled
# init-real=nan : initialize every real allocation to nan, follow the nans to find uninitialized values
# init-integer=-42 : same, but for integers
# init-character=33 : same, but for characters, 33 is equal to "!" (so look for those)
  COMPILER_FLAGS_CHECK    = -fcheck=all -fbacktrace -Og \
                            -finit-real=nan -finit-integer=-42 -finit-character=33 \
                            -ffpe-trap=invalid,zero,overflow

# Final set of compiler flags:
  F90FLAGS                = ${COMPILER_FLAGS_BASIC} \
                            ${COMPILER_FLAGS_CHECK} \
                            ${NCINC} ${NFINC} ${PETSCINC} ${COMPILER_FLAGS_SELEN}

# Linking flags of libaries:
  LDFLAGS                 = ${PETSCLIB} ${NCLIB} ${NFLIB} -g
